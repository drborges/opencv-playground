#include <opencv2/opencv.hpp>

using namespace cv;
using namespace std;

int main()
{
    Mat frame; //current frame
    Mat resizeF;
    Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
    VideoCapture cap(0);

    Ptr<BackgroundSubtractor> pMOG2 = cv::createBackgroundSubtractorMOG2(500, 40,false);
    Mat element = getStructuringElement(MORPH_RECT, Size(3, 3), Point(1,1) );

    while (true) {
        Mat cameraFrame;

        if(!(cap.read(frame))) //get one frame form video
            break;

        resize(frame, resizeF, Size(frame.size().width/2, frame.size().height/2) );

        cvtColor(resizeF, resizeF, COLOR_BGR2GRAY);
        GaussianBlur(resizeF, resizeF, Size(7,7), 4, 4);

        pMOG2->apply(resizeF, fgMaskMOG2, -1);

        imshow("Origin", resizeF);
        imshow("MOG2", fgMaskMOG2);

        if (waitKey(30) >= 0)
            break;
    }
}